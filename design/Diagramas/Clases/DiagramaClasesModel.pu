@startuml Diagrama clases Model
' left to right direction
set namespaceSeparator none
allow_mixing

package es.tiernoparla.daw.mercadaw.model {

    package enum{

        enum CategoriaProducto {
            ALIMENTACION
            DROGUERIA
            COSMETICA
        }

        enum CategoriaEmpleado {
            EMPLEADO
            REPONEDOR
            CAJERO
            ENCARGADO
        }
    }

    abstract Persona {
        #nombre: String
        #apellidos: String
    }

    interface MercaDaw {
        +darAlta(producto: Producto): int
        +darAlta(empleado: Empleado): int
        +visualizarProductos(producto: Producto): void
        +visualizarEmpleados(List<Empleado> empleados): void
        +obtenerPrecio(producto: Producto): double
        +calcularNominas(List<Empleado> empleados): double
        +obtenerPrecioVenta(producto: Producto): String
        +imprimirEtiqueta(producto: Producto): String
    }

    class Sede {

    }

    class ProductoBuilder {
        -nombre: String
        -marca: String
        -precio: double
        -altura: double
        -anchura: double
        -peso: double
        -numElementos: int
        -descripcion: String
        +setNombre(nombre: String): ProductoBuilder
        +setMarca(marca: String): ProductoBuilder
        +setPrecio(precio: double): ProductoBuilder
        +setAltura(altura: double): ProductoBuilder
        +setAnchura(anchura: double): ProductoBuilder
        +setPeso(peso: double): ProductoBuilder
        +setNumElementos(numElementos: int): ProductoBuilder
        +setDescripcion(descripcion: String): ProductoBuilder
        ~ProductoBuilder()
        +build(): Producto
    }

    abstract Producto {
        -nombre: String
        -marca: String
        -precio: double
        -altura: double
        -anchura: double
        -peso: double
        -numElementos: int
        -descripcion: String
        +calcularComision(): double
        +calcularRecargoPeso(): double
        +calcularRecargoAltura(): double
        +calcularRecargoAnchura(): double
        +calcularRecargoElementos(): double
        +{abstract}calcularIVA(): double
        +Producto(pb: ProductoBuilder)
        +{static} builder(): ProductoBuilder
    }

    class Alimentacion {
        +{static} CATEGORIA: CategoriaProducto = ALIMENTACION
        +{static} IVA= 4
    }

    class Drogueria {
        +{static} CATEGORIA: CategoriaProducto = DROGUERIA
        +{static} IVA= 10
    }

    class Cosmetica {
        +{static} CATEGORIA: CategoriaProducto = COSMETICA
        +{static} IVA= 21
    }

    class Empleado {
        +{static} CATEGORIA: CategoriaEmpleado = Empleado
        +{static} SUELDO = 1000
        #id: int
    }

    class Reponedor {
        +{static} CATEGORIA: CategoriaEmpleado = Reponedor
        +{static} SUELDO = 1200
    }

    class Cajero {
        +{static} CATEGORIA: CategoriaEmpleado = Cajero
        +{static} SUELDO = 1300
    }

    class Encargado {
        +{static} CATEGORIA: CategoriaEmpleado = Encargado
        +{static} SUELDO = 1500
    }

    class Cliente {
        -codPostal: int
        -email: String
    }

    class ProductoFactory {
        +obtenerProducto(categoria: CategoriaProducto): MercaDaw
    }

    Producto <|-- Alimentacion
    Producto <|-- Drogueria
    Producto <|-- Cosmetica

    Empleado <|-- Reponedor
    Empleado <|-- Cajero
    Empleado <|-- Encargado

    Persona <|-- Empleado
    Persona <|-- Cliente

    Sede o-- Producto
    Sede o-- Empleado

    MercaDaw <|.. Sede

    package dao {
        interface MercaDawDAO {
            +crearTablaProductos(): void
            +crearTablaEmpleados(): void
            +crearTablaCompras(): void
            +insertar(producto: Producto): int
            +insertar(List<Producto> productos): int
            +actualizar(producto: Producto): int
            +borrar(producto: Producto): int
            +insertar(empleado: Empleado): int
            +insertar(List<Empleado> empleados): int
            +actualizar(empleado: Empleado): int
            +borrar(empleado: Empleado): int
        }

        class MercaDawMariaDBDAOImp {
            -conexion: Connection
            -conectar(): Connection
        }

        class MercaDawMockDAOImp

        class MercaDawDAOFactory {
            +{static}obtenerDAO(tipo: TipoDAO): MercaDawDAO
        }

        enum Database {
            MOCK
            MARIADB
        }

        MercaDawDAO <|.. MercaDawMariaDBDAOImp
        MercaDawDAO <|.. MercaDawMockDAOImp

    }
}

component MariaDB <<Database>>
component org.mariadb.jdbc <<JDBC Driver>>

MercaDawMariaDBDAOImp ..> MariaDB
MercaDawMariaDBDAOImp ..> org.mariadb.jdbc

Sede ..> MercaDawDAO

@enduml